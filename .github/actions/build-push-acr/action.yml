name: Build & push
description: |
  Builds an image using the project's Dockerfile, and pushes it 
  to ACR (Azure Container Registry) repository.
inputs:
  tags:
    type: string
    required: false
    default: latest
  ref:
    type: string
    required: false
    default: ''  # falsy value = fallback to default
  repository-name:
    type: string
    required: true
  acr-username:
    type: string
    required: true
  acr-password:
    type: string
    required: true
  acr-login-server:
    type: string
    required: true
  github-token:
    type: string
    required: true
  build-args:
    type: string
    required: false
  actor:
    type: string
    required: true
  ssh_socket_forward:
    required: false
    default: "false"
  private-pypi-host:
    type: string
    required: false
  private-pypi-user:
    type: string
    required: false
  private-pypi-pass:
    type: string
    required: false
outputs:
  tags:
    value: ${{ steps.list.outputs.tags }}
runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ inputs.ref }}
    - id: auth-acr
      name: Authenticate with ACR
      uses: azure/docker-login@v1
      with:
        login-server: ${{ inputs.acr-login-server }}
        username: ${{ inputs.acr-username }}
        password: ${{ inputs.acr-password }}
    - id: auth-ghcr
      name: Authorize Docker to ghcr.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ inputs.actor }}
        password: ${{ inputs.github-token }}
    - id: list
      name: List output image tags
      env:
        TAGS: ${{ inputs.tags }}
        REGISTRY: ${{ inputs.acr-login-server }}
        REPOSITORY: ${{ inputs.repository-name }}
      shell: bash
      run: |
        REPOSITORY_URI="$REGISTRY/$REPOSITORY"
        echo "::set-output name=tags::$(echo $TAGS | sed "s|[^ ]*|$REPOSITORY_URI\:&\n|g")"
    - id: collect-ssh-config
      name: Collect Git and SSH config files in a directory that is part of the Docker build context
      if: ${{ inputs.ssh_socket_forward == 'true'}}
      shell: bash
      run: |
        mkdir root-config
        cp -r ~/.gitconfig  ~/.ssh root-config/
    - id: docker_build
      name: Build and push without SSH agent socket
      if: ${{ inputs.ssh_socket_forward == 'false'}}
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        build-args: ${{ inputs.build-args }}
        tags: "${{ steps.list.outputs.tags }}"
        secrets: |
          "private_pip_url=https://${{ inputs.private-pypi-host }}"
          "private_pip_username=${{ inputs.private-pypi-user }}"
          "private_pip_password=${{ inputs.private-pypi-pass }}"
    - id: docker_build-with-ssh
      name: Build and push with SSH agent socket
      if: ${{ inputs.ssh_socket_forward == 'true'}}
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        build-args: ${{ inputs.build-args }}
        tags: "${{ steps.list.outputs.tags }}"
        ssh: |
          default=${{ env.SSH_AUTH_SOCK }}
        secrets: |
          "private_pip_url=https://${{ inputs.private-pypi-host }}"
          "private_pip_username=${{ inputs.private-pypi-user }}"
          "private_pip_password=${{ inputs.private-pypi-pass }}"
